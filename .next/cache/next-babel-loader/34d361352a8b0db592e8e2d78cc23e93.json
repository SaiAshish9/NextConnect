{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\n\nconst ActiveLink = ({\n  router,\n  href,\n  children\n}) => {\n  (function prefetchPages() {\n    if (false) {\n      router.prefetch(router.pathname);\n    }\n  })();\n\n  const handleClick = event => {\n    event.preventDefault();\n    router.push(href);\n  };\n\n  const isCurrentPath = router.pathname === href || router.asPath === href;\n  return __jsx(\"div\", null, __jsx(\"a\", {\n    href: href,\n    onClick: handleClick,\n    style: {\n      textDecoration: \"none\",\n      margin: 0,\n      padding: 0,\n      fontWeight: isCurrentPath ? \"bold\" : \"normal\",\n      color: isCurrentPath ? \"#C62828\" : \"#fff\"\n    }\n  }, children));\n};\n\nexport default withRouter(ActiveLink);","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/Next/nextConnect/components/ActiveLink.js"],"names":["withRouter","ActiveLink","router","href","children","prefetchPages","prefetch","pathname","handleClick","event","preventDefault","push","isCurrentPath","asPath","textDecoration","margin","padding","fontWeight","color"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAAD,KAAgC;AACjD,GAAC,SAASC,aAAT,GAAyB;AACxB,eAAmC;AACjCH,MAAAA,MAAM,CAACI,QAAP,CAAgBJ,MAAM,CAACK,QAAvB;AACD;AACF,GAJD;;AAMA,QAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,MAAM,CAACS,IAAP,CAAYR,IAAZ;AACD,GAHD;;AAKA,QAAMS,aAAa,GAAGV,MAAM,CAACK,QAAP,KAAoBJ,IAApB,IAA4BD,MAAM,CAACW,MAAP,KAAkBV,IAApE;AAEA,SACE,mBACE;AACE,IAAA,IAAI,EAAEA,IADR;AAEE,IAAA,OAAO,EAAEK,WAFX;AAGE,IAAA,KAAK,EAAE;AACLM,MAAAA,cAAc,EAAE,MADX;AAELC,MAAAA,MAAM,EAAE,CAFH;AAGLC,MAAAA,OAAO,EAAE,CAHJ;AAILC,MAAAA,UAAU,EAAEL,aAAa,GAAG,MAAH,GAAY,QAJhC;AAKLM,MAAAA,KAAK,EAAEN,aAAa,GAAG,SAAH,GAAe;AAL9B;AAHT,KAWGR,QAXH,CADF,CADF;AAiBD,CA/BD;;AAiCA,eAAeJ,UAAU,CAACC,UAAD,CAAzB","sourcesContent":["import { withRouter } from \"next/router\";\n\nconst ActiveLink = ({ router, href, children }) => {\n  (function prefetchPages() {\n    if (typeof window !== \"undefined\") {\n      router.prefetch(router.pathname);\n    }\n  })();\n\n  const handleClick = event => {\n    event.preventDefault();\n    router.push(href);\n  };\n\n  const isCurrentPath = router.pathname === href || router.asPath === href;\n\n  return (\n    <div>\n      <a\n        href={href}\n        onClick={handleClick}\n        style={{\n          textDecoration: \"none\",\n          margin: 0,\n          padding: 0,\n          fontWeight: isCurrentPath ? \"bold\" : \"normal\",\n          color: isCurrentPath ? \"#C62828\" : \"#fff\"\n        }}\n      >\n        {children}\n      </a>\n    </div>\n  );\n};\n\nexport default withRouter(ActiveLink);\n"]},"metadata":{},"sourceType":"module"}